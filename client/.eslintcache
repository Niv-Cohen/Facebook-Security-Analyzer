[{"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\index.js":"1","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\App.js":"2","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\containers\\Login.js":"3","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\containers\\Signup.js":"4","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\containers\\Activate.js":"5","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\containers\\ResetPassword.js":"6","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\containers\\ResetPasswordConfirm.js":"7","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\hocs\\Layout.js":"8","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\containers\\Home.js":"9","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\store.js":"10","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\reducers\\index.js":"11","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\reducers\\auth.js":"12","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\actions\\types.js":"13","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\actions\\auth.js":"14","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\containers\\Scan.js":"15","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\reducers\\network.js":"16","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\components\\WaitingPage.js":"17","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\actions\\network.js":"18","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\components\\CSRFToken.js":"19","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\components\\Navbar.js":"20","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\components\\NetworkFilters.js":"21","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\components\\Network.js":"22"},{"size":196,"mtime":1613671735503,"results":"23","hashOfConfig":"24"},{"size":1310,"mtime":1613674152127,"results":"25","hashOfConfig":"24"},{"size":2379,"mtime":1612962493385,"results":"26","hashOfConfig":"24"},{"size":3434,"mtime":1613869141626,"results":"27","hashOfConfig":"24"},{"size":1175,"mtime":1611845561395,"results":"28","hashOfConfig":"24"},{"size":1553,"mtime":1613868911895,"results":"29","hashOfConfig":"24"},{"size":2292,"mtime":1613257041757,"results":"30","hashOfConfig":"24"},{"size":240,"mtime":1611760889473,"results":"31","hashOfConfig":"24"},{"size":2409,"mtime":1613872812941,"results":"32","hashOfConfig":"24"},{"size":403,"mtime":1611782720256,"results":"33","hashOfConfig":"24"},{"size":161,"mtime":1613252178263,"results":"34","hashOfConfig":"24"},{"size":2786,"mtime":1613508095663,"results":"35","hashOfConfig":"24"},{"size":1730,"mtime":1613873054164,"results":"36","hashOfConfig":"24"},{"size":5785,"mtime":1613507419264,"results":"37","hashOfConfig":"24"},{"size":1438,"mtime":1613872991809,"results":"38","hashOfConfig":"24"},{"size":2265,"mtime":1613873731913,"results":"39","hashOfConfig":"24"},{"size":695,"mtime":1613671780087,"results":"40","hashOfConfig":"24"},{"size":2761,"mtime":1613913894688,"results":"41","hashOfConfig":"24"},{"size":1178,"mtime":1612962315855,"results":"42","hashOfConfig":"24"},{"size":2274,"mtime":1613671488129,"results":"43","hashOfConfig":"24"},{"size":4393,"mtime":1613921576003,"results":"44","hashOfConfig":"24"},{"size":296,"mtime":1613921142597,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"i9kced",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\index.js",[],["96","97"],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\App.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\containers\\Login.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\containers\\Signup.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\containers\\Activate.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\containers\\ResetPassword.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\containers\\ResetPasswordConfirm.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\hocs\\Layout.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\containers\\Home.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\store.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\reducers\\index.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\reducers\\auth.js",["98"],"import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n    FACEBOOK_AUTH_SUCCESS,\r\n    FACEBOOK_AUTH_FAIL,\r\n    LOGOUT,\r\n    REFRESH_USER\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n        case GOOGLE_AUTH_SUCCESS:\r\n        case FACEBOOK_AUTH_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            localStorage.setItem('refresh', payload.refresh);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case GOOGLE_AUTH_FAIL:\r\n        case FACEBOOK_AUTH_FAIL:\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        case REFRESH_USER:\r\n            return {\r\n                ...state,\r\n                user:payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\actions\\types.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\actions\\auth.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\containers\\Scan.js",["99","100"],"import React,{useState,useEffect} from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { refresh_user } from '../actions/auth';\r\nimport {finish_scrapping} from '../actions/network'\r\nimport WaitingPage from '../components/WaitingPage'\r\nimport Network from '../components/Network'\r\n\r\n\r\nconst Scan = ({user,is_scrapping, scrapped_network, is_filtering, err_msg, refresh_user, finish_scrapping}) =>{\r\n    if(scrapped_network){\r\n        refresh_user(scrapped_network)\r\n        finish_scrapping()\r\n    }\r\n   \r\n\r\n    const scrap_text='We Are Scraping Your Network';\r\n    const filter_text='We Are Creating Your Filtered Network'\r\n    \r\n    return (\r\n        <div className='container'>\r\n            {is_scrapping===true?\r\n            <WaitingPage header_text={scrap_text}/>:\r\n            is_filtering?\r\n            <WaitingPage header_text={filter_text}/>:\r\n            err_msg?\r\n            <Redirect to='/'/>\r\n            :\r\n            <Network name={user.name}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user,\r\n    is_filtering: state.network.is_filtering,\r\n    is_scrapping: state.network.is_scrapping,\r\n    scrapped_network: state.network.scrapped_network,\r\n    err_msg: state.network.err_msg,\r\n    thresholds: state.network.thresholds\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,{refresh_user,finish_scrapping})(Scan)","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\reducers\\network.js",["101"],"import {\r\n    FILTERED_GRAPH_SUCCESS,\r\n    SCRAP_SUCCESS,\r\n    SCRAP_FAIL,\r\n    SCRAPPING,\r\n    FILTERRING,\r\n    FILTER_FAIL,\r\n    FINISH_SCRAPPING\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    is_scrapping: false,\r\n    is_filtering: false,\r\n    scrapped_network:null,\r\n    err_msg:\"\",\r\n    thresholds:{\r\n        minimum_trust_value:0,\r\n        connection:{\r\n            mutual_friends:10,\r\n            friendship_duration:356\r\n        },\r\n        user:{\r\n            total_friends:150,\r\n            age_of_account:356\r\n        }\r\n    }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case SCRAPPING:\r\n            return{\r\n                ...state,\r\n                is_scrapping:true,\r\n                err_msg:null\r\n            }\r\n        case FILTERRING:\r\n            const  { mutual_friends, friendship_duration, total_friends, age_of_account,minimum_trust_value } = payload;\r\n            return{\r\n                ...state,\r\n                is_filtering:true,\r\n                thresholds: \r\n                    {mininum_trust_value:minimum_trust_value,\r\n                     connection:{friendship_duration,mutual_friends},\r\n                     user:{total_friends,age_of_account}},\r\n                err_msg:null\r\n            }\r\n        case FILTERED_GRAPH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                is_filtering:false,\r\n                \r\n            }\r\n        case SCRAP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                scrapped_network:payload\r\n            }\r\n        case SCRAP_FAIL:\r\n            return {\r\n                ...state,\r\n                is_scrapping:false,\r\n                err_msg:'Something went wrong with Scrapping the network'\r\n            }\r\n        case FILTER_FAIL:\r\n             return {\r\n                    ...state,\r\n                    is_filtering:false,\r\n                    err_msg:'Something went wrong with Scrapping the network'\r\n             }\r\n        case FINISH_SCRAPPING:\r\n            return{\r\n                ...state,\r\n                is_scrapping:false,\r\n                scrapped_network:null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\components\\WaitingPage.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\actions\\network.js",["102"],"import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport {\r\n    SCRAP_SUCCESS,\r\n    SCRAP_FAIL,\r\n    FILTERED_GRAPH_SUCCESS,\r\n    FILTER_FAIL,\r\n    SCRAPPING,\r\n    FILTERRING,\r\n    FINISH_SCRAPPING,\r\n    UPDATE_THRESHOLDS\r\n\r\n} from './types';\r\n\r\nexport const create_filtered_graph = (user_state,thresholds) => async dispatch => {\r\n    dispatch({\r\n        type:FILTERRING,\r\n        payload:thresholds\r\n    })\r\n\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n    \r\n    const {email} = user_state;\r\n    console.log(thresholds)\r\n    const  { mutual_friends, friendship_duration, total_friends, age_of_account,minimum_trust_value } = thresholds;\r\n    const body = JSON.stringify({email, mutual_friends, friendship_duration, total_friends, age_of_account, minimum_trust_value });\r\n    console.log(body)\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/network/filter/`, body, config);\r\n        if(res.status===200){\r\n            dispatch({\r\n                type: FILTERED_GRAPH_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: FILTER_FAIL,\r\n                payload: 'Unable To Filter Network'\r\n            })\r\n        }\r\n    }catch (err) {\r\n        dispatch({\r\n            type: FILTER_FAIL,\r\n            payload: 'Unable To Filter Network'\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const scrap_network = (user_state,thresholds) => async dispatch => {\r\n    dispatch({\r\n        type:SCRAPPING\r\n    })\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n    \r\n    const {password,email,name} = user_state;\r\n    const  {connection,user} = thresholds;\r\n    const body = JSON.stringify({email,name,password, connection, user});\r\n    \r\n    try {\r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/network/scrap/`, body, config);\r\n        if (res.status===200) {\r\n            console.log(res.data)\r\n            dispatch({\r\n                type: SCRAP_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: SCRAP_FAIL,\r\n                payload: 'Unable To Scan Network'\r\n            })\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SCRAP_FAIL,\r\n            payload: 'Unable To Scan Network'\r\n        })\r\n    }\r\n};\r\n\r\nexport const finish_scrapping = () => dispatch => {\r\n    dispatch({\r\n        type:FINISH_SCRAPPING\r\n    })\r\n}\r\n\r\n","C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\components\\CSRFToken.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\components\\NetworkFilters.js",[],"C:\\Users\\Nivos_co\\Desktop\\Git\\Social Network Safety Improvment\\client\\src\\components\\Network.js",["103"],"import React from 'react'\r\nimport NetworkFilters from './NetworkFilters'\r\n\r\nconst Network = ({name})=>{\r\n\r\n    return(\r\n        <>\r\n        <img src={require('../assets/'+name+'.png').default} width=\"700\" height=\"60%\"/>\r\n        <NetworkFilters />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Network",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":31,"column":1,"nodeType":"110","endLine":102,"endColumn":2},{"ruleId":"111","severity":1,"message":"112","line":1,"column":15,"nodeType":"113","messageId":"114","endLine":1,"endColumn":23},{"ruleId":"111","severity":1,"message":"115","line":1,"column":24,"nodeType":"113","messageId":"114","endLine":1,"endColumn":33},{"ruleId":"108","severity":1,"message":"109","line":29,"column":1,"nodeType":"110","endLine":82,"endColumn":2},{"ruleId":"111","severity":1,"message":"116","line":11,"column":5,"nodeType":"113","messageId":"114","endLine":11,"endColumn":22},{"ruleId":"117","severity":1,"message":"118","line":8,"column":9,"nodeType":"119","endLine":8,"endColumn":88},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'UPDATE_THRESHOLDS' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]